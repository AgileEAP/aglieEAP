<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Repository接口 -->
<mapper namespace="com.agileEAP.workflow.repository.ProcessInstRepository">
	<sql id="columns">
		ID as id,
		Name as name,
		ProcessDefID as processDefID,
		ProcessDefName as processDefName,
		ParentProcessID as parentProcessID,
		ParentActivityID as parentActivityID,
		CurrentState as currentState,
		LimitTime as limitTime,
		StartTime as startTime,
		EndTime as endTime,
		FinalTime as finalTime,
		RemindTime as remindTime,
		IsTimeOut as isTimeOut,
		TimeOutTime as timeOutTime,
		ProcessVersion as processVersion,
		Description as description,
		Creator as creator,
		CreateTime as createTime   
	</sql>
    
    <sql id="whereParams">
        <if test="id  != null">
            and ID =#{id}
        </if>
        <if test="name  != null">
            and Name like '${name}%'
        </if> 
        <if test="processDefID  != null">
            and ProcessDefID =#{processDefID}
        </if>
        <if test="processDefName  != null">
            and ProcessDefName like '${processDefName}%'
        </if> 
        <if test="parentProcessID  != null">
            and ParentProcessID =#{parentProcessID}
        </if>
        <if test="parentActivityID  != null">
            and ParentActivityID =#{parentActivityID}
        </if>
        <if test="currentState  != null">
            and CurrentState =#{currentState}
        </if>
        <if test="beginLimitTime!=null">
            <![CDATA[ and LimitTime>= to_date('${beginLimitTime} 00:00:00','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
    	    <if test="endLimitTime!=null">
            <![CDATA[ and LimitTime<= to_date('${endLimitTime} 23:59:59','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
        <if test="beginStartTime!=null">
            <![CDATA[ and StartTime>= to_date('${beginStartTime} 00:00:00','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
    	    <if test="endStartTime!=null">
            <![CDATA[ and StartTime<= to_date('${endStartTime} 23:59:59','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
        <if test="beginEndTime!=null">
            <![CDATA[ and EndTime>= to_date('${beginEndTime} 00:00:00','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
    	    <if test="endEndTime!=null">
            <![CDATA[ and EndTime<= to_date('${endEndTime} 23:59:59','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
        <if test="beginFinalTime!=null">
            <![CDATA[ and FinalTime>= to_date('${beginFinalTime} 00:00:00','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
    	    <if test="endFinalTime!=null">
            <![CDATA[ and FinalTime<= to_date('${endFinalTime} 23:59:59','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
        <if test="beginRemindTime!=null">
            <![CDATA[ and RemindTime>= to_date('${beginRemindTime} 00:00:00','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
    	    <if test="endRemindTime!=null">
            <![CDATA[ and RemindTime<= to_date('${endRemindTime} 23:59:59','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
        <if test="isTimeOut  != null">
            and IsTimeOut =#{isTimeOut}
        </if>
        <if test="beginTimeOutTime!=null">
            <![CDATA[ and TimeOutTime>= to_date('${beginTimeOutTime} 00:00:00','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
    	    <if test="endTimeOutTime!=null">
            <![CDATA[ and TimeOutTime<= to_date('${endTimeOutTime} 23:59:59','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
        <if test="processVersion  != null">
            and ProcessVersion like '${processVersion}%'
        </if> 
        <if test="description  != null">
            and Description like '${description}%'
        </if> 
        <if test="creator  != null">
            and Creator like '${creator}%'
        </if> 
        <if test="beginCreateTime!=null">
            <![CDATA[ and CreateTime>= to_date('${beginCreateTime} 00:00:00','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
    	    <if test="endCreateTime!=null">
            <![CDATA[ and CreateTime<= to_date('${endCreateTime} 23:59:59','yyyy-MM-dd hh24:mi:ss')]]>
        </if>
    </sql>
    
    <select id="get" parameterType="String" resultType="com.agileEAP.workflow.entity.ProcessInst">
    	select 		
        <include refid="columns" />
    	from WF_ProcessInst
    	where ID=#{id}
    </select>

    <insert id="save" parameterType="com.agileEAP.workflow.entity.ProcessInst">
    	insert into  WF_ProcessInst (
    	ID,Name,ProcessDefID,ProcessDefName,ParentProcessID,ParentActivityID,CurrentState,LimitTime,StartTime,EndTime,FinalTime,RemindTime,IsTimeOut,TimeOutTime,ProcessVersion,Description,Creator,CreateTime)
    	values (#{id},#{name},#{processDefID},#{processDefName},#{parentProcessID},#{parentActivityID},#{currentState},#{limitTime},#{startTime},#{endTime},#{finalTime},#{remindTime},#{isTimeOut},#{timeOutTime},#{processVersion},#{description},#{creator},#{createTime})
    </insert>

    <insert id="update" parameterType="com.agileEAP.workflow.entity.ProcessInst">
    	update WF_ProcessInst set
    	Name=#{name},ProcessDefID=#{processDefID},ProcessDefName=#{processDefName},ParentProcessID=#{parentProcessID},ParentActivityID=#{parentActivityID},CurrentState=#{currentState},LimitTime=#{limitTime},StartTime=#{startTime},EndTime=#{endTime},FinalTime=#{finalTime},RemindTime=#{remindTime},IsTimeOut=#{isTimeOut},TimeOutTime=#{timeOutTime},ProcessVersion=#{processVersion},Description=#{description},Creator=#{creator},CreateTime=#{createTime}
    	where ID=#{id}
    </insert>

    <delete id="delete" parameterType="String">
         delete from  WF_ProcessInst where ID=#{id}
    </delete>   

    <delete id="batchDelete" parameterType="list">
    	<![CDATA[
    		delete from WF_ProcessInst where ID in
    	]]>
    	<foreach collection="list" item="id" open="(" separator="," close=")">
    		#{id}
    	</foreach>
    </delete>
    
	<select id="search" parameterType="map" resultType="com.agileEAP.workflow.entity.ProcessInst">
		select
        <include refid="columns" />
		from WF_ProcessInst where 1=1
        <include refid="whereParams"/>  
        <if test="$orderby!=null">
			order by ${$orderby}
		</if>
	</select>
    
    <select id="count" parameterType="map" resultType="long">
		select count(*)
		from WF_ProcessInst where 1=1
		<include refid="whereParams"/>
	</select>
    
    <select id="searchByPage" parameterType="map" resultType="com.agileEAP.workflow.entity.ProcessInst">
		select
        <include refid="columns" />
		from WF_ProcessInst where 1=1
        <include refid="whereParams"/>  
    </select>
</mapper>