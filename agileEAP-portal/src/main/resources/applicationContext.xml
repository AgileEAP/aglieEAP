<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<description>Spring公共配置</description>
<!-- 	<bean id="httpServletResponse" class="com.agileEAP.web.HttpServletResponseFactoryBean" scope="request"/>
	<bean id="responseInScopeFilter" class="com.agileEAP.web.ResponseInScopeFilter"/> -->
	
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.agileEAP">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<!-- <property name="typeAliasesPackage" value="com.agileEAP.authorization.entity" 
			/> -->

		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 显式指定Mapper文件位置 -->
		<!-- <property name="mapperLocations" value="classpath:com/agileEAP/*/mybatis/*Mapper.xml" 
			/> -->
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.agileEAP" />
		<property name="annotationClass" value="com.agileEAP.data.MyBatisRepository" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.local.properties" />

		<!-- 数据源配置,使用应用内的Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle半个小时后超时，每15分钟检查一次 -->
			<property name="timeBetweenEvictionRunsMillis" value="900000" />
			<property name="minEvictableIdleTimeMillis" value="1800000" />
		</bean>
		
 		<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
		<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			Connection Info
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean> -->

		<!-- quartz使用的数据源配置 -->
		<!-- <bean id="quartzDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource"> 
			<property name="driverClass" value="${quartz.jdbc.driver}" /> <property name="url" 
			value="${quartz.jdbc.url}" /> <property name="username" value="${quartz.jdbc.username}" 
			/> <property name="password" value="${quartz.jdbc.password}" /> </bean> -->
	</beans>

	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.development.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		
		<!-- DBCP连接池 -->
<!-- 		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean> -->
	</beans>

	<!-- unit test环境 -->
	<beans profile="test">
		<context:property-placeholder
			ignore-resource-not-found="true" location="classpath*:/application.properties" />

		<!-- 嵌入式内存中数据库 -->
		<jdbc:embedded-database id="dataSource" type="H2">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
		</jdbc:embedded-database>

		<jdbc:embedded-database id="quartzDataSource"
			type="H2">
			<jdbc:script location="classpath:sql/h2/quartz.sql" />
		</jdbc:embedded-database>
	</beans>

	<!-- functional test环境 -->
	<beans profile="functional">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.functional.properties,
          			  classpath*:/application.functional-local.properties" />

		<!-- DBCP连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>

		<bean id="quartzDataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${quartz.jdbc.driver}" />
			<property name="url" value="${quartz.jdbc.url}" />
			<property name="username" value="${quartz.jdbc.username}" />
			<property name="password" value="${quartz.jdbc.password}" />
		</bean>

		<!-- 初始化数据结构 -->
		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="ALL">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
		</jdbc:initialize-database>

		<jdbc:initialize-database data-source="quartzDataSource"
			ignore-failures="ALL">
			<jdbc:script location="classpath:sql/h2/quartz.sql" />
		</jdbc:initialize-database>
	</beans>
</beans>